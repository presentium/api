apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: presentium-api
    app.kubernetes.io/component: api-server
    app.kubernetes.io/instance: presentium-{{ .Values.global.instance }}
    app.kubernetes.io/version: {{ .Values.image.tag }}
    app.kubernetes.io/part-of: presentium
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: presentium-api
      app.kubernetes.io/instance: presentium-{{ .Values.global.instance }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: presentium-api
        app.kubernetes.io/component: api-server
        app.kubernetes.io/instance: presentium-{{ .Values.global.instance }}
        app.kubernetes.io/version: {{ .Values.image.tag }}
        app.kubernetes.io/part-of: presentium
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: api-server
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          command:
            - /__cacert_entrypoint.sh
          args: ['java', '-cp', '@/app/jib-classpath-file', 'ch.presentium.backend.PresentiumApiApplication']
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: '{{ .Values.spring.profiles | join "," }}'
            - name: SERVER_PORT
              value: '{{ .Values.spring.server.port }}'
            - name: GRPC_SERVER_PORT
              value: '{{ .Values.spring.server.grpcPort }}'
            - name: TZ
              value: UTC
            - name: USE_SYSTEM_CA_CERTS
              value: 'true'
          ports:
            - containerPort: {{ .Values.spring.server.port }}
              name: 'http'
              protocol: TCP
            - containerPort: {{ .Values.spring.server.grpcPort }}
              name: 'grpc'
              protocol: TCP
          volumeMounts:
            - mountPath: /certificates
              name: tls
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 50m
              memory: 128Mi
          readinessProbe:
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            failureThreshold: 3
            httpGet:
              scheme: HTTP
              path: /actuator/health/readiness
              port: http
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            failureThreshold: 3
            httpGet:
              scheme: HTTP
              path: /actuator/health/liveness
              port: http
      volumes:
        - name: tls
          configMap:
            name: kube-root-ca.crt
            defaultMode: 0400
