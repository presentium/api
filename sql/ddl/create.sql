
    create table api_user (
        id varchar(255) not null,
        display_name varchar(255) not null,
        email varchar(255) not null,
        subject varchar(255) not null,
        primary key (id),
        unique (subject)
    );

    create table class_session (
        id uuid not null,
        dt_session timestamp(6) not null,
        school_class_fk bigint not null,
        primary key (id)
    );

    create table class_student (
        class_fk bigint not null,
        student_fk uuid not null,
        primary key (class_fk, student_fk)
    );

    create table course (
        id bigint generated by default as identity,
        name varchar(255) not null,
        semester varchar(255) not null check (semester in ('T1','T2','T3','T4')),
        year integer not null,
        primary key (id),
        constraint uk_course_name unique (name, year, semester)
    );

    create table person (
        id uuid not null,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        api_user_fk varchar(255) unique,
        primary key (id),
        constraint uk_email unique (email)
    );

    create table presence (
        id uuid not null,
        class_session_fk uuid not null,
        student_fk uuid not null,
        primary key (id)
    );

    create table presence_box (
        id uuid not null,
        name varchar(255) not null,
        teacher_fk uuid,
        primary key (id),
        unique (name)
    );

    create table room (
        id bigint generated by default as identity,
        name varchar(255) not null,
        primary key (id),
        constraint uk_room_name unique (name)
    );

    create table school_class (
        id bigint generated by default as identity,
        day_of_week smallint not null check (day_of_week between 0 and 6),
        end time(6) not null,
        group varchar(255) not null,
        name varchar(255) not null,
        start time(6) not null,
        course_fk bigint not null,
        room_fk bigint not null,
        teacher_fk uuid not null,
        primary key (id),
        constraint uk_school_class_name unique (name, course_fk)
    );

    create table student (
        card_id varchar(255),
        person_fk uuid not null,
        primary key (person_fk),
        constraint uk_student_card_id unique (card_id)
    );

    create table teacher (
        person_fk uuid not null,
        primary key (person_fk)
    );

    alter table if exists class_session 
       add constraint fk_session_school_class 
       foreign key (school_class_fk) 
       references school_class;

    alter table if exists class_student 
       add constraint fk_student_class 
       foreign key (student_fk) 
       references student;

    alter table if exists class_student 
       add constraint fk_class_student 
       foreign key (class_fk) 
       references school_class;

    alter table if exists person 
       add constraint fk_person_api_user 
       foreign key (api_user_fk) 
       references api_user;

    alter table if exists presence 
       add constraint fk_presence_session 
       foreign key (class_session_fk) 
       references class_session;

    alter table if exists presence 
       add constraint fk_student 
       foreign key (student_fk) 
       references student;

    alter table if exists presence_box 
       add constraint fk_box_teacher 
       foreign key (teacher_fk) 
       references teacher;

    alter table if exists school_class 
       add constraint fk_class_course 
       foreign key (course_fk) 
       references course;

    alter table if exists school_class 
       add constraint fk_class_room 
       foreign key (room_fk) 
       references room;

    alter table if exists school_class 
       add constraint fk_class_teacher 
       foreign key (teacher_fk) 
       references teacher;

    alter table if exists student 
       add constraint fk_student_person 
       foreign key (person_fk) 
       references person;

    alter table if exists teacher 
       add constraint fk_teacher_person 
       foreign key (person_fk) 
       references person;
